def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_winner(board, player):
    # Check rows, columns, and diagonals
    for i in range(3):
        if all([cell == player for cell in board[i]]) or \
           all([board[j][i] == player for j in range(3)]):
            return True
    if all([board[i][i] == player for i in range(3)]) or \
       all([board[i][2 - i] == player for i in range(3)]):
        return True
    return False

def is_full(board):
    return all(cell != " " for row in board for cell in row)

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current = "X"

    while True:
        print_board(board)
        row = int(input(f"Player {current}, enter row (0-2): "))
        col = int(input(f"Player {current}, enter col (0-2): "))

        if board[row][col] != " ":
            print("Cell already taken! Try again.")
            continue

        board[row][col] = current

        if check_winner(board, current):
            print_board(board)
            print(f"Player {current} wins!")
            break

        if is_full(board):
            print_board(board)
            print("It's a draw!")
            break

        current = "O" if current == "X" else "X"

# Run the game
tic_tac_toe()
